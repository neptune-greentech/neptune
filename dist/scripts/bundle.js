!function(){"use strict";class e{constructor(e){this.options=e,this.setOptionProperty(e)}setOptionProperty(e){if(e)for(let t in e)document.documentElement.style.setProperty(t,this.options[t])}}addEventListener("DOMContentLoaded",(function(){NeptuneCustomVars&&new e(NeptuneCustomVars)}));const t=document.body,n=document.querySelector(".nav"),s=document.querySelector(".nav_icon"),r=document.querySelector(".hero-full"),o=document.querySelector(".hero_img"),i=document.querySelector(".hero_overlay"),l=document.querySelector(".gallery_slider"),a=document.querySelector(".gallery_slider_inner");if(s&&s.addEventListener("click",(()=>{t.classList.contains("active")?t.classList.remove("active"):t.classList.add("active")})),r){const e=()=>{const e=n.offsetHeight;r.style.height=`calc(100vh - ${e}px)`};window.matchMedia("(min-width: 1000px)").matches&&e(),window.addEventListener("resize",(()=>{window.matchMedia("(min-width: 1000px)").matches?e():r.style.height="auto"}))}if(i){const e=()=>{const e=o.offsetHeight;i.style.height=`calc(${e/2}px)`};e(),window.addEventListener("resize",(()=>e()))}let d=!1,c=null,u=null;function y(){const e=l.getBoundingClientRect(),t=a.getBoundingClientRect();parseInt(a.style.left)>0?a.style.left="0px":t.right<e.right&&(a.style.left=`-${t.width-e.width}px`)}l&&(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(l.addEventListener("touchstart",(e=>{d=!0,c=e.touches[0].screenX-a.offsetLeft,l.style.cursor="grabbing"}),{passive:!0}),l.addEventListener("touchenter",(()=>l.style.cursor="grab"),{passive:!0}),l.addEventListener("touchend",(()=>l.style.cursor="grab"),{passive:!0}),window.addEventListener("touchend",(()=>d=!1),{passive:!0}),l.addEventListener("touchmove",(e=>{d&&(e.preventDefault(),u=e.touches[0].screenX,a.style.left=u-c+"px",y())}),{passive:!0})):(l.addEventListener("mousedown",(e=>{d=!0,c=e.offsetX-a.offsetLeft,l.style.cursor="grabbing"})),l.addEventListener("mouseenter",(()=>l.style.cursor="grab")),l.addEventListener("mouseup",(()=>l.style.cursor="grab")),window.addEventListener("mouseup",(()=>d=!1)),l.addEventListener("mousemove",(e=>{d&&(e.preventDefault(),u=e.offsetX,a.style.left=u-c+"px",y())})))),document.querySelectorAll(".testimonials").forEach((e=>{const t=e.querySelector(".slider_inner"),n=e.querySelectorAll(".slide"),s=e.querySelector(".prev"),r=e.querySelector(".next"),o=n.length;let i=n[0].offsetWidth,l=parseInt(getComputedStyle(n[0]).marginRight),a=i+l;const d=n[0].cloneNode(!0),c=n[o-1].cloneNode(!0);d.setAttribute("id","first-clone"),c.setAttribute("id","last-clone"),t.appendChild(d),t.prepend(c);const u=e.querySelectorAll(".slide");t.style.transform=`translateX(${-a}px)`;let y=1;r.addEventListener("click",(()=>{y++,t.style.transition="transform 0.5s ease-in-out, opacity 0.2s",t.style.transform=`translateX(${-a*y}px)`,y>=u.length&&(y=o)})),s.addEventListener("click",(()=>{y--,t.style.transition="transform 0.5s ease-in-out, opacity 0.2s",t.style.transform=`translateX(${-a*y}px)`,y<0&&(y=0)})),t.addEventListener("transitionend",(()=>{"first-clone"===u[y].id&&(t.style.transition="none",y=1,t.style.transform=`translateX(${-a*y}px)`),"last-clone"===u[y].id&&(t.style.transition="none",y=o,t.style.transform=`translateX(${-a*y}px)`)})),window.addEventListener("resize",(()=>{i=n[0].offsetWidth,l=parseInt(getComputedStyle(n[0]).marginRight),a=i+l,t.style.transition="none",t.style.transform=`translateX(${-a*y}px)`}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,